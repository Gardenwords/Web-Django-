<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <title>主页</title>
    <style type="text/css">
        * {
            margin: 0;
            padding: 0;
            font-family: 'Open Sans Light';
            letter-spacing: .05em;
        }
        .menu{
            width: 200px;
            height: 580px;
            background-image: linear-gradient(to right,#ececea,#dcdbd8);
            position: absolute;
            top: 12%;
            left: 8%;
            text-align: center;
            transition: 1s;
            border-radius: 15px;
        }
        .menu:hover {
            width: 220px;
            height: 600px;
            background-image: linear-gradient(to right,#ececea,#dcdbd8);
            transition: 1s;
        }
        .Title{
            font-size: 30px;
            font-weight: bold;
            list-style:none;
            line-height: 200px;
        }
        .Text{
            font-size: medium;
            line-height: 50px;
            list-style:none;
            display: block;
            width: 100%;
            border: 0;
        }
        #myCanvas {
            background-color: rgba(0,0,0,0.8);
        }
        .begging{
            font-family: 'Open Sans Light';
            letter-spacing: .05em;
            position:absolute;
            top: 12%;
            left:90%;
            font-size: large;
            color: aliceblue;
        }
        .picture{
            position:absolute;
            top: 18%;
            left:88%;
            width: 150px;
            height: 150px;
        }
        .massage{
            width: 860px;
            height: 580px;
            background-image: linear-gradient(to right,#ececea,#dcdbd8);
            position: absolute;
            top: 10%;
            left: 30%;
            text-align: center;
            border-radius: 15px;
        }
        .introduction{
            position: relative;
            left : 370px;
            font-weight: bold;
            text-align: left;
            line-height: 50px;
        }
        .btn{
            height: 32px;
            width: 150px;
            top: 40%;
            margin-left: 1345px;
            border-radius:10px;
            font-size: 14px;
            background: none;
            border: 0;
            outline: 0;
            color: white;
            font-family: 'JetBrains Mono';
            font-size: 20px;
            cursor: pointer;
            border: 2px solid white;
            position: absolute;
        }
        .btn:hover {
          color: brown;
        }
        a:link{text-decoration: none;color: black}
        a:active{text-decoration:black}
        a:hover{text-decoration:none;color: black;font-size: large}
        a:visited{text-decoration: none;color: black}
        #live2dcanvas {
            border: 0 !important;
        }
    </style>
</head>

<body>
    <div class = "menu">
        <ul>
            <li class = "Title">菜单
                <ul class = "Text">
                    <p>当前登陆账户:</p>{{ request.session.usrerAccount }}
                    <p>选项:</p>
                    <li><a href = "../userMsg">修改个人信息</a></li>
                    <li><a href = "../search">搜索下单</a></li>
                    <li><a href = "../employment">雇佣合同</a></li>
                    <li><a href = "../login">注销</a></li>
                </ul>
            </li>
        </ul>
    </div>
    <div>
        <p onmouseover= "over()" onmouseout="out()" class = "begging">给点...给点</p>
        <img src = "/static/1592188176.png" style="display:none;" class = "picture" id="img">
    </div>
    <div class = "massage">
        <p class = Title>
            今日推荐
        </p>
            <p class = introduction>名字：{{ request.session.username }}</p>
            <p class = introduction>性别：{{ request.session.usersex }}</p>
            <p class = introduction>年龄：{{ request.session.userage }}</p>
            <p class = introduction>能力：{{ request.session.userability }}</p>
            <p class = introduction>工资：{{ request.session.salary }}</p>
            <p class = introduction>交易数：{{ request.session.usertransaction }}</p>
            <p class = introduction>差评数：{{ request.session.usernegative }}</p>
    </div>
    <form method = "POST" action = "/main/">
            <input type = submit value = "导出用户信息" class = btn>
    </form>
    <canvas id="myCanvas"></canvas>
</body>
<script>
    function over() {
        img = document.getElementById("img");
        img.style.display = "block";
    }       
    function out(){
        img = document.getElementById("img");
        img.style.display = "none";
    }
</script>
<script type="text/javascript">
    var canvas = document.getElementById("myCanvas");
    canvas.width = document.documentElement.clientWidth;
    canvas.height = document.documentElement.clientHeight;
    var ctx = canvas.getContext("2d");
    //创建小球的构造函数
    function Ball() {
        this.x = randomNum(3, canvas.width - 3);
        this.y = randomNum(3, canvas.height - 3);
        this.r = randomNum(1, 3);
        this.color = randomColor();
        this.speedX = randomNum(-3, 3) * 0.2;
        this.speedY = randomNum(-3, 3) * 0.2;
    }
    Ball.prototype = {
            //绘制小球
            draw: function () {
                    ctx.beginPath();
                    ctx.globalAlpha = 1;
                    ctx.fillStyle = this.color;
                    ctx.arc(this.x, this.y, this.r, 0, Math.PI * 2);
                    ctx.fill();
                },
                //小球移动
                move: function () {
                    this.x += this.speedX;
                    this.y += this.speedY;
                    //为了合理性,设置极限值
                    if (this.x <= 3 || this.x > canvas.width - 3) {
                        this.speedX *= -1;
                    }
                    if (this.y <= 3 || this.y >= canvas.height - 3) {
                        this.speedY *= -1;
                    }
                }
        }
        //存储所有的小球
    var balls = [];
    //创建200个小球
    for (var i = 0; i < 150; i++) {
        var ball = new Ball();
        balls.push(ball);
    }
    main();

    function main() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            //鼠标移动绘制线
            mouseLine();
            //小球与小球之间自动画线
            drawLine();
            //使用关键帧动画，不断的绘制和清除
            window.requestAnimationFrame(main);
        }
        //添加鼠标移动事件
        //记录鼠标移动时的mouseX坐标
    var mouseX;
    var mouseY;
    canvas.onmousemove = function (e) {
            var ev = event || e;
            mouseX = ev.offsetX;
            mouseY = ev.offsetY;
        }
        //判断是否划线

    function drawLine() {
            for (var i = 0; i < balls.length; i++) {
                balls[i].draw();
                balls[i].move();
                for (var j = 0; j < balls.length; j++) {
                    if (i != j) {
                        if (Math.sqrt(Math.pow((balls[i].x - balls[j].x), 2) + Math.pow((balls[i].y - balls[j].y), 2)) < 80) {
                            ctx.beginPath();
                            ctx.moveTo(balls[i].x, balls[i].y);
                            ctx.lineTo(balls[j].x, balls[j].y);
                            ctx.strokeStyle = "white";
                            ctx.globalAlpha = 0.2;
                            ctx.stroke();
                        }
                    }
                }
            }
        }
        //使用鼠标移动划线

    function mouseLine() {
            for (var i = 0; i < balls.length; i++) {
                if (Math.sqrt(Math.pow((balls[i].x - mouseX), 2) + Math.pow((balls[i].y - mouseY), 2)) < 80) {
                    ctx.beginPath();
                    ctx.moveTo(balls[i].x, balls[i].y);
                    ctx.lineTo(mouseX, mouseY);
                    ctx.strokeStyle = "white";
                    ctx.globalAlpha = 0.8;
                    ctx.stroke();
                }
            }
        }
        //随机函数

    function randomNum(m, n) {
            return Math.floor(Math.random() * (n - m + 1) + m);
        }
        //随机颜色

    function randomColor() {
        return "rgb(" + randomNum(0, 255) + "," + randomNum(0, 255) + "," + randomNum(0, 255) + ")";
    }
</script>
<script type="text/javascript" charset="utf-8"  src="https://files.cnblogs.com/files/liuzhou1/L2Dwidget.0.min.js"></script>
<script type="text/javascript" charset="utf-8"  src="https://files.cnblogs.com/files/liuzhou1/L2Dwidget.min.js"></script>
<script type="text/javascript">
    L2Dwidget.init({"display": {
        "superSample": 2,
        "width": 200,
        "height": 400,
             "position": "right",
                 "hOffset": 0,
        "vOffset": 0
          }
     });
</script>
</html>